/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated/route'
import { Route as authRouteImport } from './routes/(auth)/route'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as authSignUpImport } from './routes/(auth)/sign-up'
import { Route as authSignInImport } from './routes/(auth)/sign-in'
import { Route as authResetPasswordImport } from './routes/(auth)/reset-password'
import { Route as authOtpImport } from './routes/(auth)/otp'
import { Route as authForgotPasswordImport } from './routes/(auth)/forgot-password'
import { Route as AuthenticatedUserDashboardImport } from './routes/_authenticated/user/dashboard'
import { Route as AuthenticatedSuperAdminRolesImport } from './routes/_authenticated/super-admin/roles'
import { Route as AuthenticatedSuperAdminPropertiesImport } from './routes/_authenticated/super-admin/properties'
import { Route as AuthenticatedSuperAdminPricePredictionImport } from './routes/_authenticated/super-admin/price-prediction'
import { Route as AuthenticatedSuperAdminDashboardImport } from './routes/_authenticated/super-admin/dashboard'
import { Route as AuthenticatedSuperAdminBlockchainImport } from './routes/_authenticated/super-admin/blockchain'
import { Route as AuthenticatedAgentPricePredictionImport } from './routes/_authenticated/agent/price-prediction'
import { Route as AuthenticatedAgentDashboardImport } from './routes/_authenticated/agent/dashboard'
import { Route as AuthenticatedAdminPricePredictionImport } from './routes/_authenticated/admin/price-prediction'
import { Route as AuthenticatedAdminDashboardImport } from './routes/_authenticated/admin/dashboard'
import { Route as authAuthSsoCallbackCompleteImport } from './routes/(auth)/auth/sso-callback-complete'
import { Route as authAuthSignInImport } from './routes/(auth)/auth/sign-in'
import { Route as authAuth500Import } from './routes/(auth)/auth/500'
import { Route as AuthenticatedSuperAdminUsersIndexImport } from './routes/_authenticated/super-admin/users/index'
import { Route as AuthenticatedAgentClientsIndexImport } from './routes/_authenticated/agent/clients/index'
import { Route as AuthenticatedSuperAdminUsersPendingImport } from './routes/_authenticated/super-admin/users/pending'

// Create Virtual Routes

const errorsTermsLazyImport = createFileRoute('/(errors)/terms')()
const errorsPrivacyLazyImport = createFileRoute('/(errors)/privacy')()
const errors503LazyImport = createFileRoute('/(errors)/503')()
const errors500LazyImport = createFileRoute('/(errors)/500')()
const errors404LazyImport = createFileRoute('/(errors)/404')()
const errors403LazyImport = createFileRoute('/(errors)/403')()
const errors401LazyImport = createFileRoute('/(errors)/401')()
const AuthenticatedSettingsRouteLazyImport = createFileRoute(
  '/_authenticated/settings',
)()
const AuthenticatedUsersIndexLazyImport = createFileRoute(
  '/_authenticated/users/',
)()
const AuthenticatedTasksIndexLazyImport = createFileRoute(
  '/_authenticated/tasks/',
)()
const AuthenticatedSettingsIndexLazyImport = createFileRoute(
  '/_authenticated/settings/',
)()
const AuthenticatedHelpCenterIndexLazyImport = createFileRoute(
  '/_authenticated/help-center/',
)()
const AuthenticatedChatsIndexLazyImport = createFileRoute(
  '/_authenticated/chats/',
)()
const AuthenticatedAppsIndexLazyImport = createFileRoute(
  '/_authenticated/apps/',
)()
const AuthenticatedSettingsNotificationsLazyImport = createFileRoute(
  '/_authenticated/settings/notifications',
)()
const AuthenticatedSettingsDisplayLazyImport = createFileRoute(
  '/_authenticated/settings/display',
)()
const AuthenticatedSettingsAppearanceLazyImport = createFileRoute(
  '/_authenticated/settings/appearance',
)()
const AuthenticatedSettingsAccountLazyImport = createFileRoute(
  '/_authenticated/settings/account',
)()
const authAuthSignUpLazyImport = createFileRoute('/(auth)/auth/sign-up')()
const authAuthSignIn2LazyImport = createFileRoute('/(auth)/auth/sign-in-2')()

// Create/Update Routes

const AuthenticatedRouteRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const authRouteRoute = authRouteImport.update({
  id: '/(auth)',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)

const errorsTermsLazyRoute = errorsTermsLazyImport
  .update({
    id: '/(errors)/terms',
    path: '/terms',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/terms.lazy').then((d) => d.Route))

const errorsPrivacyLazyRoute = errorsPrivacyLazyImport
  .update({
    id: '/(errors)/privacy',
    path: '/privacy',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/privacy.lazy').then((d) => d.Route))

const errors503LazyRoute = errors503LazyImport
  .update({
    id: '/(errors)/503',
    path: '/503',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/503.lazy').then((d) => d.Route))

const errors500LazyRoute = errors500LazyImport
  .update({
    id: '/(errors)/500',
    path: '/500',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/500.lazy').then((d) => d.Route))

const errors404LazyRoute = errors404LazyImport
  .update({
    id: '/(errors)/404',
    path: '/404',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/404.lazy').then((d) => d.Route))

const errors403LazyRoute = errors403LazyImport
  .update({
    id: '/(errors)/403',
    path: '/403',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/403.lazy').then((d) => d.Route))

const errors401LazyRoute = errors401LazyImport
  .update({
    id: '/(errors)/401',
    path: '/401',
    getParentRoute: () => rootRoute,
  } as any)
  .lazy(() => import('./routes/(errors)/401.lazy').then((d) => d.Route))

const AuthenticatedSettingsRouteLazyRoute =
  AuthenticatedSettingsRouteLazyImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/route.lazy').then((d) => d.Route),
  )

const authSignUpRoute = authSignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => authRouteRoute,
} as any)

const authSignInRoute = authSignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => authRouteRoute,
} as any)

const authResetPasswordRoute = authResetPasswordImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => authRouteRoute,
} as any)

const authOtpRoute = authOtpImport.update({
  id: '/otp',
  path: '/otp',
  getParentRoute: () => authRouteRoute,
} as any)

const authForgotPasswordRoute = authForgotPasswordImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => authRouteRoute,
} as any)

const AuthenticatedUsersIndexLazyRoute =
  AuthenticatedUsersIndexLazyImport.update({
    id: '/users/',
    path: '/users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/users/index.lazy').then((d) => d.Route),
  )

const AuthenticatedTasksIndexLazyRoute =
  AuthenticatedTasksIndexLazyImport.update({
    id: '/tasks/',
    path: '/tasks/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/tasks/index.lazy').then((d) => d.Route),
  )

const AuthenticatedSettingsIndexLazyRoute =
  AuthenticatedSettingsIndexLazyImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/index.lazy').then((d) => d.Route),
  )

const AuthenticatedHelpCenterIndexLazyRoute =
  AuthenticatedHelpCenterIndexLazyImport.update({
    id: '/help-center/',
    path: '/help-center/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/help-center/index.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedChatsIndexLazyRoute =
  AuthenticatedChatsIndexLazyImport.update({
    id: '/chats/',
    path: '/chats/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/chats/index.lazy').then((d) => d.Route),
  )

const AuthenticatedAppsIndexLazyRoute = AuthenticatedAppsIndexLazyImport.update(
  {
    id: '/apps/',
    path: '/apps/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
).lazy(() =>
  import('./routes/_authenticated/apps/index.lazy').then((d) => d.Route),
)

const AuthenticatedSettingsNotificationsLazyRoute =
  AuthenticatedSettingsNotificationsLazyImport.update({
    id: '/notifications',
    path: '/notifications',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/notifications.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsDisplayLazyRoute =
  AuthenticatedSettingsDisplayLazyImport.update({
    id: '/display',
    path: '/display',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/display.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAppearanceLazyRoute =
  AuthenticatedSettingsAppearanceLazyImport.update({
    id: '/appearance',
    path: '/appearance',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/appearance.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthenticatedSettingsAccountLazyRoute =
  AuthenticatedSettingsAccountLazyImport.update({
    id: '/account',
    path: '/account',
    getParentRoute: () => AuthenticatedSettingsRouteLazyRoute,
  } as any).lazy(() =>
    import('./routes/_authenticated/settings/account.lazy').then(
      (d) => d.Route,
    ),
  )

const authAuthSignUpLazyRoute = authAuthSignUpLazyImport
  .update({
    id: '/auth/sign-up',
    path: '/auth/sign-up',
    getParentRoute: () => authRouteRoute,
  } as any)
  .lazy(() => import('./routes/(auth)/auth/sign-up.lazy').then((d) => d.Route))

const authAuthSignIn2LazyRoute = authAuthSignIn2LazyImport
  .update({
    id: '/auth/sign-in-2',
    path: '/auth/sign-in-2',
    getParentRoute: () => authRouteRoute,
  } as any)
  .lazy(() =>
    import('./routes/(auth)/auth/sign-in-2.lazy').then((d) => d.Route),
  )

const AuthenticatedUserDashboardRoute = AuthenticatedUserDashboardImport.update(
  {
    id: '/user/dashboard',
    path: '/user/dashboard',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any,
)

const AuthenticatedSuperAdminRolesRoute =
  AuthenticatedSuperAdminRolesImport.update({
    id: '/super-admin/roles',
    path: '/super-admin/roles',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSuperAdminPropertiesRoute =
  AuthenticatedSuperAdminPropertiesImport.update({
    id: '/super-admin/properties',
    path: '/super-admin/properties',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSuperAdminPricePredictionRoute =
  AuthenticatedSuperAdminPricePredictionImport.update({
    id: '/super-admin/price-prediction',
    path: '/super-admin/price-prediction',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSuperAdminDashboardRoute =
  AuthenticatedSuperAdminDashboardImport.update({
    id: '/super-admin/dashboard',
    path: '/super-admin/dashboard',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSuperAdminBlockchainRoute =
  AuthenticatedSuperAdminBlockchainImport.update({
    id: '/super-admin/blockchain',
    path: '/super-admin/blockchain',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAgentPricePredictionRoute =
  AuthenticatedAgentPricePredictionImport.update({
    id: '/agent/price-prediction',
    path: '/agent/price-prediction',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAgentDashboardRoute =
  AuthenticatedAgentDashboardImport.update({
    id: '/agent/dashboard',
    path: '/agent/dashboard',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAdminPricePredictionRoute =
  AuthenticatedAdminPricePredictionImport.update({
    id: '/admin/price-prediction',
    path: '/admin/price-prediction',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAdminDashboardRoute =
  AuthenticatedAdminDashboardImport.update({
    id: '/admin/dashboard',
    path: '/admin/dashboard',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const authAuthSsoCallbackCompleteRoute =
  authAuthSsoCallbackCompleteImport.update({
    id: '/auth/sso-callback-complete',
    path: '/auth/sso-callback-complete',
    getParentRoute: () => authRouteRoute,
  } as any)

const authAuthSignInRoute = authAuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => authRouteRoute,
} as any)

const authAuth500Route = authAuth500Import.update({
  id: '/auth/500',
  path: '/auth/500',
  getParentRoute: () => authRouteRoute,
} as any)

const AuthenticatedSuperAdminUsersIndexRoute =
  AuthenticatedSuperAdminUsersIndexImport.update({
    id: '/super-admin/users/',
    path: '/super-admin/users/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedAgentClientsIndexRoute =
  AuthenticatedAgentClientsIndexImport.update({
    id: '/agent/clients/',
    path: '/agent/clients/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

const AuthenticatedSuperAdminUsersPendingRoute =
  AuthenticatedSuperAdminUsersPendingImport.update({
    id: '/super-admin/users/pending',
    path: '/super-admin/users/pending',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(auth)': {
      id: '/(auth)'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof authRouteImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/forgot-password': {
      id: '/(auth)/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof authForgotPasswordImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/otp': {
      id: '/(auth)/otp'
      path: '/otp'
      fullPath: '/otp'
      preLoaderRoute: typeof authOtpImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/reset-password': {
      id: '/(auth)/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof authResetPasswordImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/sign-up': {
      id: '/(auth)/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof authSignUpImport
      parentRoute: typeof authRouteImport
    }
    '/_authenticated/settings': {
      id: '/_authenticated/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthenticatedSettingsRouteLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503LazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/privacy': {
      id: '/(errors)/privacy'
      path: '/privacy'
      fullPath: '/privacy'
      preLoaderRoute: typeof errorsPrivacyLazyImport
      parentRoute: typeof rootRoute
    }
    '/(errors)/terms': {
      id: '/(errors)/terms'
      path: '/terms'
      fullPath: '/terms'
      preLoaderRoute: typeof errorsTermsLazyImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/auth/500': {
      id: '/(auth)/auth/500'
      path: '/auth/500'
      fullPath: '/auth/500'
      preLoaderRoute: typeof authAuth500Import
      parentRoute: typeof authRouteImport
    }
    '/(auth)/auth/sign-in': {
      id: '/(auth)/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof authAuthSignInImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/auth/sso-callback-complete': {
      id: '/(auth)/auth/sso-callback-complete'
      path: '/auth/sso-callback-complete'
      fullPath: '/auth/sso-callback-complete'
      preLoaderRoute: typeof authAuthSsoCallbackCompleteImport
      parentRoute: typeof authRouteImport
    }
    '/_authenticated/admin/dashboard': {
      id: '/_authenticated/admin/dashboard'
      path: '/admin/dashboard'
      fullPath: '/admin/dashboard'
      preLoaderRoute: typeof AuthenticatedAdminDashboardImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/admin/price-prediction': {
      id: '/_authenticated/admin/price-prediction'
      path: '/admin/price-prediction'
      fullPath: '/admin/price-prediction'
      preLoaderRoute: typeof AuthenticatedAdminPricePredictionImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/agent/dashboard': {
      id: '/_authenticated/agent/dashboard'
      path: '/agent/dashboard'
      fullPath: '/agent/dashboard'
      preLoaderRoute: typeof AuthenticatedAgentDashboardImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/agent/price-prediction': {
      id: '/_authenticated/agent/price-prediction'
      path: '/agent/price-prediction'
      fullPath: '/agent/price-prediction'
      preLoaderRoute: typeof AuthenticatedAgentPricePredictionImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/super-admin/blockchain': {
      id: '/_authenticated/super-admin/blockchain'
      path: '/super-admin/blockchain'
      fullPath: '/super-admin/blockchain'
      preLoaderRoute: typeof AuthenticatedSuperAdminBlockchainImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/super-admin/dashboard': {
      id: '/_authenticated/super-admin/dashboard'
      path: '/super-admin/dashboard'
      fullPath: '/super-admin/dashboard'
      preLoaderRoute: typeof AuthenticatedSuperAdminDashboardImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/super-admin/price-prediction': {
      id: '/_authenticated/super-admin/price-prediction'
      path: '/super-admin/price-prediction'
      fullPath: '/super-admin/price-prediction'
      preLoaderRoute: typeof AuthenticatedSuperAdminPricePredictionImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/super-admin/properties': {
      id: '/_authenticated/super-admin/properties'
      path: '/super-admin/properties'
      fullPath: '/super-admin/properties'
      preLoaderRoute: typeof AuthenticatedSuperAdminPropertiesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/super-admin/roles': {
      id: '/_authenticated/super-admin/roles'
      path: '/super-admin/roles'
      fullPath: '/super-admin/roles'
      preLoaderRoute: typeof AuthenticatedSuperAdminRolesImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/user/dashboard': {
      id: '/_authenticated/user/dashboard'
      path: '/user/dashboard'
      fullPath: '/user/dashboard'
      preLoaderRoute: typeof AuthenticatedUserDashboardImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/(auth)/auth/sign-in-2': {
      id: '/(auth)/auth/sign-in-2'
      path: '/auth/sign-in-2'
      fullPath: '/auth/sign-in-2'
      preLoaderRoute: typeof authAuthSignIn2LazyImport
      parentRoute: typeof authRouteImport
    }
    '/(auth)/auth/sign-up': {
      id: '/(auth)/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof authAuthSignUpLazyImport
      parentRoute: typeof authRouteImport
    }
    '/_authenticated/settings/account': {
      id: '/_authenticated/settings/account'
      path: '/account'
      fullPath: '/settings/account'
      preLoaderRoute: typeof AuthenticatedSettingsAccountLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/appearance': {
      id: '/_authenticated/settings/appearance'
      path: '/appearance'
      fullPath: '/settings/appearance'
      preLoaderRoute: typeof AuthenticatedSettingsAppearanceLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/display': {
      id: '/_authenticated/settings/display'
      path: '/display'
      fullPath: '/settings/display'
      preLoaderRoute: typeof AuthenticatedSettingsDisplayLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/settings/notifications': {
      id: '/_authenticated/settings/notifications'
      path: '/notifications'
      fullPath: '/settings/notifications'
      preLoaderRoute: typeof AuthenticatedSettingsNotificationsLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/apps/': {
      id: '/_authenticated/apps/'
      path: '/apps'
      fullPath: '/apps'
      preLoaderRoute: typeof AuthenticatedAppsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/chats/': {
      id: '/_authenticated/chats/'
      path: '/chats'
      fullPath: '/chats'
      preLoaderRoute: typeof AuthenticatedChatsIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/help-center/': {
      id: '/_authenticated/help-center/'
      path: '/help-center'
      fullPath: '/help-center'
      preLoaderRoute: typeof AuthenticatedHelpCenterIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/settings/': {
      id: '/_authenticated/settings/'
      path: '/'
      fullPath: '/settings/'
      preLoaderRoute: typeof AuthenticatedSettingsIndexLazyImport
      parentRoute: typeof AuthenticatedSettingsRouteLazyImport
    }
    '/_authenticated/tasks/': {
      id: '/_authenticated/tasks/'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof AuthenticatedTasksIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/users/': {
      id: '/_authenticated/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof AuthenticatedUsersIndexLazyImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/super-admin/users/pending': {
      id: '/_authenticated/super-admin/users/pending'
      path: '/super-admin/users/pending'
      fullPath: '/super-admin/users/pending'
      preLoaderRoute: typeof AuthenticatedSuperAdminUsersPendingImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/agent/clients/': {
      id: '/_authenticated/agent/clients/'
      path: '/agent/clients'
      fullPath: '/agent/clients'
      preLoaderRoute: typeof AuthenticatedAgentClientsIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
    '/_authenticated/super-admin/users/': {
      id: '/_authenticated/super-admin/users/'
      path: '/super-admin/users'
      fullPath: '/super-admin/users'
      preLoaderRoute: typeof AuthenticatedSuperAdminUsersIndexImport
      parentRoute: typeof AuthenticatedRouteImport
    }
  }
}

// Create and export the route tree

interface authRouteRouteChildren {
  authForgotPasswordRoute: typeof authForgotPasswordRoute
  authOtpRoute: typeof authOtpRoute
  authResetPasswordRoute: typeof authResetPasswordRoute
  authSignInRoute: typeof authSignInRoute
  authSignUpRoute: typeof authSignUpRoute
  authAuth500Route: typeof authAuth500Route
  authAuthSignInRoute: typeof authAuthSignInRoute
  authAuthSsoCallbackCompleteRoute: typeof authAuthSsoCallbackCompleteRoute
  authAuthSignIn2LazyRoute: typeof authAuthSignIn2LazyRoute
  authAuthSignUpLazyRoute: typeof authAuthSignUpLazyRoute
}

const authRouteRouteChildren: authRouteRouteChildren = {
  authForgotPasswordRoute: authForgotPasswordRoute,
  authOtpRoute: authOtpRoute,
  authResetPasswordRoute: authResetPasswordRoute,
  authSignInRoute: authSignInRoute,
  authSignUpRoute: authSignUpRoute,
  authAuth500Route: authAuth500Route,
  authAuthSignInRoute: authAuthSignInRoute,
  authAuthSsoCallbackCompleteRoute: authAuthSsoCallbackCompleteRoute,
  authAuthSignIn2LazyRoute: authAuthSignIn2LazyRoute,
  authAuthSignUpLazyRoute: authAuthSignUpLazyRoute,
}

const authRouteRouteWithChildren = authRouteRoute._addFileChildren(
  authRouteRouteChildren,
)

interface AuthenticatedSettingsRouteLazyRouteChildren {
  AuthenticatedSettingsAccountLazyRoute: typeof AuthenticatedSettingsAccountLazyRoute
  AuthenticatedSettingsAppearanceLazyRoute: typeof AuthenticatedSettingsAppearanceLazyRoute
  AuthenticatedSettingsDisplayLazyRoute: typeof AuthenticatedSettingsDisplayLazyRoute
  AuthenticatedSettingsNotificationsLazyRoute: typeof AuthenticatedSettingsNotificationsLazyRoute
  AuthenticatedSettingsIndexLazyRoute: typeof AuthenticatedSettingsIndexLazyRoute
}

const AuthenticatedSettingsRouteLazyRouteChildren: AuthenticatedSettingsRouteLazyRouteChildren =
  {
    AuthenticatedSettingsAccountLazyRoute:
      AuthenticatedSettingsAccountLazyRoute,
    AuthenticatedSettingsAppearanceLazyRoute:
      AuthenticatedSettingsAppearanceLazyRoute,
    AuthenticatedSettingsDisplayLazyRoute:
      AuthenticatedSettingsDisplayLazyRoute,
    AuthenticatedSettingsNotificationsLazyRoute:
      AuthenticatedSettingsNotificationsLazyRoute,
    AuthenticatedSettingsIndexLazyRoute: AuthenticatedSettingsIndexLazyRoute,
  }

const AuthenticatedSettingsRouteLazyRouteWithChildren =
  AuthenticatedSettingsRouteLazyRoute._addFileChildren(
    AuthenticatedSettingsRouteLazyRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedSettingsRouteLazyRoute: typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAdminDashboardRoute: typeof AuthenticatedAdminDashboardRoute
  AuthenticatedAdminPricePredictionRoute: typeof AuthenticatedAdminPricePredictionRoute
  AuthenticatedAgentDashboardRoute: typeof AuthenticatedAgentDashboardRoute
  AuthenticatedAgentPricePredictionRoute: typeof AuthenticatedAgentPricePredictionRoute
  AuthenticatedSuperAdminBlockchainRoute: typeof AuthenticatedSuperAdminBlockchainRoute
  AuthenticatedSuperAdminDashboardRoute: typeof AuthenticatedSuperAdminDashboardRoute
  AuthenticatedSuperAdminPricePredictionRoute: typeof AuthenticatedSuperAdminPricePredictionRoute
  AuthenticatedSuperAdminPropertiesRoute: typeof AuthenticatedSuperAdminPropertiesRoute
  AuthenticatedSuperAdminRolesRoute: typeof AuthenticatedSuperAdminRolesRoute
  AuthenticatedUserDashboardRoute: typeof AuthenticatedUserDashboardRoute
  AuthenticatedAppsIndexLazyRoute: typeof AuthenticatedAppsIndexLazyRoute
  AuthenticatedChatsIndexLazyRoute: typeof AuthenticatedChatsIndexLazyRoute
  AuthenticatedHelpCenterIndexLazyRoute: typeof AuthenticatedHelpCenterIndexLazyRoute
  AuthenticatedTasksIndexLazyRoute: typeof AuthenticatedTasksIndexLazyRoute
  AuthenticatedUsersIndexLazyRoute: typeof AuthenticatedUsersIndexLazyRoute
  AuthenticatedSuperAdminUsersPendingRoute: typeof AuthenticatedSuperAdminUsersPendingRoute
  AuthenticatedAgentClientsIndexRoute: typeof AuthenticatedAgentClientsIndexRoute
  AuthenticatedSuperAdminUsersIndexRoute: typeof AuthenticatedSuperAdminUsersIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedSettingsRouteLazyRoute:
    AuthenticatedSettingsRouteLazyRouteWithChildren,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAdminDashboardRoute: AuthenticatedAdminDashboardRoute,
  AuthenticatedAdminPricePredictionRoute:
    AuthenticatedAdminPricePredictionRoute,
  AuthenticatedAgentDashboardRoute: AuthenticatedAgentDashboardRoute,
  AuthenticatedAgentPricePredictionRoute:
    AuthenticatedAgentPricePredictionRoute,
  AuthenticatedSuperAdminBlockchainRoute:
    AuthenticatedSuperAdminBlockchainRoute,
  AuthenticatedSuperAdminDashboardRoute: AuthenticatedSuperAdminDashboardRoute,
  AuthenticatedSuperAdminPricePredictionRoute:
    AuthenticatedSuperAdminPricePredictionRoute,
  AuthenticatedSuperAdminPropertiesRoute:
    AuthenticatedSuperAdminPropertiesRoute,
  AuthenticatedSuperAdminRolesRoute: AuthenticatedSuperAdminRolesRoute,
  AuthenticatedUserDashboardRoute: AuthenticatedUserDashboardRoute,
  AuthenticatedAppsIndexLazyRoute: AuthenticatedAppsIndexLazyRoute,
  AuthenticatedChatsIndexLazyRoute: AuthenticatedChatsIndexLazyRoute,
  AuthenticatedHelpCenterIndexLazyRoute: AuthenticatedHelpCenterIndexLazyRoute,
  AuthenticatedTasksIndexLazyRoute: AuthenticatedTasksIndexLazyRoute,
  AuthenticatedUsersIndexLazyRoute: AuthenticatedUsersIndexLazyRoute,
  AuthenticatedSuperAdminUsersPendingRoute:
    AuthenticatedSuperAdminUsersPendingRoute,
  AuthenticatedAgentClientsIndexRoute: AuthenticatedAgentClientsIndexRoute,
  AuthenticatedSuperAdminUsersIndexRoute:
    AuthenticatedSuperAdminUsersIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '': typeof AuthenticatedRouteRouteWithChildren
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/reset-password': typeof authResetPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/500': typeof errors500LazyRoute
  '/503': typeof errors503LazyRoute
  '/privacy': typeof errorsPrivacyLazyRoute
  '/terms': typeof errorsTermsLazyRoute
  '/auth/500': typeof authAuth500Route
  '/auth/sign-in': typeof authAuthSignInRoute
  '/auth/sso-callback-complete': typeof authAuthSsoCallbackCompleteRoute
  '/admin/dashboard': typeof AuthenticatedAdminDashboardRoute
  '/admin/price-prediction': typeof AuthenticatedAdminPricePredictionRoute
  '/agent/dashboard': typeof AuthenticatedAgentDashboardRoute
  '/agent/price-prediction': typeof AuthenticatedAgentPricePredictionRoute
  '/super-admin/blockchain': typeof AuthenticatedSuperAdminBlockchainRoute
  '/super-admin/dashboard': typeof AuthenticatedSuperAdminDashboardRoute
  '/super-admin/price-prediction': typeof AuthenticatedSuperAdminPricePredictionRoute
  '/super-admin/properties': typeof AuthenticatedSuperAdminPropertiesRoute
  '/super-admin/roles': typeof AuthenticatedSuperAdminRolesRoute
  '/user/dashboard': typeof AuthenticatedUserDashboardRoute
  '/auth/sign-in-2': typeof authAuthSignIn2LazyRoute
  '/auth/sign-up': typeof authAuthSignUpLazyRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/super-admin/users/pending': typeof AuthenticatedSuperAdminUsersPendingRoute
  '/agent/clients': typeof AuthenticatedAgentClientsIndexRoute
  '/super-admin/users': typeof AuthenticatedSuperAdminUsersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/forgot-password': typeof authForgotPasswordRoute
  '/otp': typeof authOtpRoute
  '/reset-password': typeof authResetPasswordRoute
  '/sign-in': typeof authSignInRoute
  '/sign-up': typeof authSignUpRoute
  '/401': typeof errors401LazyRoute
  '/403': typeof errors403LazyRoute
  '/404': typeof errors404LazyRoute
  '/500': typeof errors500LazyRoute
  '/503': typeof errors503LazyRoute
  '/privacy': typeof errorsPrivacyLazyRoute
  '/terms': typeof errorsTermsLazyRoute
  '/auth/500': typeof authAuth500Route
  '/auth/sign-in': typeof authAuthSignInRoute
  '/auth/sso-callback-complete': typeof authAuthSsoCallbackCompleteRoute
  '/admin/dashboard': typeof AuthenticatedAdminDashboardRoute
  '/admin/price-prediction': typeof AuthenticatedAdminPricePredictionRoute
  '/agent/dashboard': typeof AuthenticatedAgentDashboardRoute
  '/agent/price-prediction': typeof AuthenticatedAgentPricePredictionRoute
  '/super-admin/blockchain': typeof AuthenticatedSuperAdminBlockchainRoute
  '/super-admin/dashboard': typeof AuthenticatedSuperAdminDashboardRoute
  '/super-admin/price-prediction': typeof AuthenticatedSuperAdminPricePredictionRoute
  '/super-admin/properties': typeof AuthenticatedSuperAdminPropertiesRoute
  '/super-admin/roles': typeof AuthenticatedSuperAdminRolesRoute
  '/user/dashboard': typeof AuthenticatedUserDashboardRoute
  '/auth/sign-in-2': typeof authAuthSignIn2LazyRoute
  '/auth/sign-up': typeof authAuthSignUpLazyRoute
  '/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/apps': typeof AuthenticatedAppsIndexLazyRoute
  '/chats': typeof AuthenticatedChatsIndexLazyRoute
  '/help-center': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/settings': typeof AuthenticatedSettingsIndexLazyRoute
  '/tasks': typeof AuthenticatedTasksIndexLazyRoute
  '/users': typeof AuthenticatedUsersIndexLazyRoute
  '/super-admin/users/pending': typeof AuthenticatedSuperAdminUsersPendingRoute
  '/agent/clients': typeof AuthenticatedAgentClientsIndexRoute
  '/super-admin/users': typeof AuthenticatedSuperAdminUsersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(auth)': typeof authRouteRouteWithChildren
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/forgot-password': typeof authForgotPasswordRoute
  '/(auth)/otp': typeof authOtpRoute
  '/(auth)/reset-password': typeof authResetPasswordRoute
  '/(auth)/sign-in': typeof authSignInRoute
  '/(auth)/sign-up': typeof authSignUpRoute
  '/_authenticated/settings': typeof AuthenticatedSettingsRouteLazyRouteWithChildren
  '/(errors)/401': typeof errors401LazyRoute
  '/(errors)/403': typeof errors403LazyRoute
  '/(errors)/404': typeof errors404LazyRoute
  '/(errors)/500': typeof errors500LazyRoute
  '/(errors)/503': typeof errors503LazyRoute
  '/(errors)/privacy': typeof errorsPrivacyLazyRoute
  '/(errors)/terms': typeof errorsTermsLazyRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/(auth)/auth/500': typeof authAuth500Route
  '/(auth)/auth/sign-in': typeof authAuthSignInRoute
  '/(auth)/auth/sso-callback-complete': typeof authAuthSsoCallbackCompleteRoute
  '/_authenticated/admin/dashboard': typeof AuthenticatedAdminDashboardRoute
  '/_authenticated/admin/price-prediction': typeof AuthenticatedAdminPricePredictionRoute
  '/_authenticated/agent/dashboard': typeof AuthenticatedAgentDashboardRoute
  '/_authenticated/agent/price-prediction': typeof AuthenticatedAgentPricePredictionRoute
  '/_authenticated/super-admin/blockchain': typeof AuthenticatedSuperAdminBlockchainRoute
  '/_authenticated/super-admin/dashboard': typeof AuthenticatedSuperAdminDashboardRoute
  '/_authenticated/super-admin/price-prediction': typeof AuthenticatedSuperAdminPricePredictionRoute
  '/_authenticated/super-admin/properties': typeof AuthenticatedSuperAdminPropertiesRoute
  '/_authenticated/super-admin/roles': typeof AuthenticatedSuperAdminRolesRoute
  '/_authenticated/user/dashboard': typeof AuthenticatedUserDashboardRoute
  '/(auth)/auth/sign-in-2': typeof authAuthSignIn2LazyRoute
  '/(auth)/auth/sign-up': typeof authAuthSignUpLazyRoute
  '/_authenticated/settings/account': typeof AuthenticatedSettingsAccountLazyRoute
  '/_authenticated/settings/appearance': typeof AuthenticatedSettingsAppearanceLazyRoute
  '/_authenticated/settings/display': typeof AuthenticatedSettingsDisplayLazyRoute
  '/_authenticated/settings/notifications': typeof AuthenticatedSettingsNotificationsLazyRoute
  '/_authenticated/apps/': typeof AuthenticatedAppsIndexLazyRoute
  '/_authenticated/chats/': typeof AuthenticatedChatsIndexLazyRoute
  '/_authenticated/help-center/': typeof AuthenticatedHelpCenterIndexLazyRoute
  '/_authenticated/settings/': typeof AuthenticatedSettingsIndexLazyRoute
  '/_authenticated/tasks/': typeof AuthenticatedTasksIndexLazyRoute
  '/_authenticated/users/': typeof AuthenticatedUsersIndexLazyRoute
  '/_authenticated/super-admin/users/pending': typeof AuthenticatedSuperAdminUsersPendingRoute
  '/_authenticated/agent/clients/': typeof AuthenticatedAgentClientsIndexRoute
  '/_authenticated/super-admin/users/': typeof AuthenticatedSuperAdminUsersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/forgot-password'
    | '/otp'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/settings'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/privacy'
    | '/terms'
    | '/auth/500'
    | '/auth/sign-in'
    | '/auth/sso-callback-complete'
    | '/admin/dashboard'
    | '/admin/price-prediction'
    | '/agent/dashboard'
    | '/agent/price-prediction'
    | '/super-admin/blockchain'
    | '/super-admin/dashboard'
    | '/super-admin/price-prediction'
    | '/super-admin/properties'
    | '/super-admin/roles'
    | '/user/dashboard'
    | '/auth/sign-in-2'
    | '/auth/sign-up'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings/'
    | '/tasks'
    | '/users'
    | '/super-admin/users/pending'
    | '/agent/clients'
    | '/super-admin/users'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/otp'
    | '/reset-password'
    | '/sign-in'
    | '/sign-up'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/privacy'
    | '/terms'
    | '/auth/500'
    | '/auth/sign-in'
    | '/auth/sso-callback-complete'
    | '/admin/dashboard'
    | '/admin/price-prediction'
    | '/agent/dashboard'
    | '/agent/price-prediction'
    | '/super-admin/blockchain'
    | '/super-admin/dashboard'
    | '/super-admin/price-prediction'
    | '/super-admin/properties'
    | '/super-admin/roles'
    | '/user/dashboard'
    | '/auth/sign-in-2'
    | '/auth/sign-up'
    | '/settings/account'
    | '/settings/appearance'
    | '/settings/display'
    | '/settings/notifications'
    | '/apps'
    | '/chats'
    | '/help-center'
    | '/settings'
    | '/tasks'
    | '/users'
    | '/super-admin/users/pending'
    | '/agent/clients'
    | '/super-admin/users'
  id:
    | '__root__'
    | '/(auth)'
    | '/_authenticated'
    | '/(auth)/forgot-password'
    | '/(auth)/otp'
    | '/(auth)/reset-password'
    | '/(auth)/sign-in'
    | '/(auth)/sign-up'
    | '/_authenticated/settings'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/(errors)/privacy'
    | '/(errors)/terms'
    | '/_authenticated/'
    | '/(auth)/auth/500'
    | '/(auth)/auth/sign-in'
    | '/(auth)/auth/sso-callback-complete'
    | '/_authenticated/admin/dashboard'
    | '/_authenticated/admin/price-prediction'
    | '/_authenticated/agent/dashboard'
    | '/_authenticated/agent/price-prediction'
    | '/_authenticated/super-admin/blockchain'
    | '/_authenticated/super-admin/dashboard'
    | '/_authenticated/super-admin/price-prediction'
    | '/_authenticated/super-admin/properties'
    | '/_authenticated/super-admin/roles'
    | '/_authenticated/user/dashboard'
    | '/(auth)/auth/sign-in-2'
    | '/(auth)/auth/sign-up'
    | '/_authenticated/settings/account'
    | '/_authenticated/settings/appearance'
    | '/_authenticated/settings/display'
    | '/_authenticated/settings/notifications'
    | '/_authenticated/apps/'
    | '/_authenticated/chats/'
    | '/_authenticated/help-center/'
    | '/_authenticated/settings/'
    | '/_authenticated/tasks/'
    | '/_authenticated/users/'
    | '/_authenticated/super-admin/users/pending'
    | '/_authenticated/agent/clients/'
    | '/_authenticated/super-admin/users/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  authRouteRoute: typeof authRouteRouteWithChildren
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  errors401LazyRoute: typeof errors401LazyRoute
  errors403LazyRoute: typeof errors403LazyRoute
  errors404LazyRoute: typeof errors404LazyRoute
  errors500LazyRoute: typeof errors500LazyRoute
  errors503LazyRoute: typeof errors503LazyRoute
  errorsPrivacyLazyRoute: typeof errorsPrivacyLazyRoute
  errorsTermsLazyRoute: typeof errorsTermsLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  authRouteRoute: authRouteRouteWithChildren,
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  errors401LazyRoute: errors401LazyRoute,
  errors403LazyRoute: errors403LazyRoute,
  errors404LazyRoute: errors404LazyRoute,
  errors500LazyRoute: errors500LazyRoute,
  errors503LazyRoute: errors503LazyRoute,
  errorsPrivacyLazyRoute: errorsPrivacyLazyRoute,
  errorsTermsLazyRoute: errorsTermsLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(auth)",
        "/_authenticated",
        "/(errors)/401",
        "/(errors)/403",
        "/(errors)/404",
        "/(errors)/500",
        "/(errors)/503",
        "/(errors)/privacy",
        "/(errors)/terms"
      ]
    },
    "/(auth)": {
      "filePath": "(auth)/route.tsx",
      "children": [
        "/(auth)/forgot-password",
        "/(auth)/otp",
        "/(auth)/reset-password",
        "/(auth)/sign-in",
        "/(auth)/sign-up",
        "/(auth)/auth/500",
        "/(auth)/auth/sign-in",
        "/(auth)/auth/sso-callback-complete",
        "/(auth)/auth/sign-in-2",
        "/(auth)/auth/sign-up"
      ]
    },
    "/_authenticated": {
      "filePath": "_authenticated/route.tsx",
      "children": [
        "/_authenticated/settings",
        "/_authenticated/",
        "/_authenticated/admin/dashboard",
        "/_authenticated/admin/price-prediction",
        "/_authenticated/agent/dashboard",
        "/_authenticated/agent/price-prediction",
        "/_authenticated/super-admin/blockchain",
        "/_authenticated/super-admin/dashboard",
        "/_authenticated/super-admin/price-prediction",
        "/_authenticated/super-admin/properties",
        "/_authenticated/super-admin/roles",
        "/_authenticated/user/dashboard",
        "/_authenticated/apps/",
        "/_authenticated/chats/",
        "/_authenticated/help-center/",
        "/_authenticated/tasks/",
        "/_authenticated/users/",
        "/_authenticated/super-admin/users/pending",
        "/_authenticated/agent/clients/",
        "/_authenticated/super-admin/users/"
      ]
    },
    "/(auth)/forgot-password": {
      "filePath": "(auth)/forgot-password.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/otp": {
      "filePath": "(auth)/otp.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/reset-password": {
      "filePath": "(auth)/reset-password.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/sign-in": {
      "filePath": "(auth)/sign-in.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/sign-up": {
      "filePath": "(auth)/sign-up.tsx",
      "parent": "/(auth)"
    },
    "/_authenticated/settings": {
      "filePath": "_authenticated/settings/route.lazy.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/settings/account",
        "/_authenticated/settings/appearance",
        "/_authenticated/settings/display",
        "/_authenticated/settings/notifications",
        "/_authenticated/settings/"
      ]
    },
    "/(errors)/401": {
      "filePath": "(errors)/401.lazy.tsx"
    },
    "/(errors)/403": {
      "filePath": "(errors)/403.lazy.tsx"
    },
    "/(errors)/404": {
      "filePath": "(errors)/404.lazy.tsx"
    },
    "/(errors)/500": {
      "filePath": "(errors)/500.lazy.tsx"
    },
    "/(errors)/503": {
      "filePath": "(errors)/503.lazy.tsx"
    },
    "/(errors)/privacy": {
      "filePath": "(errors)/privacy.lazy.tsx"
    },
    "/(errors)/terms": {
      "filePath": "(errors)/terms.lazy.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx",
      "parent": "/_authenticated"
    },
    "/(auth)/auth/500": {
      "filePath": "(auth)/auth/500.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/auth/sign-in": {
      "filePath": "(auth)/auth/sign-in.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/auth/sso-callback-complete": {
      "filePath": "(auth)/auth/sso-callback-complete.tsx",
      "parent": "/(auth)"
    },
    "/_authenticated/admin/dashboard": {
      "filePath": "_authenticated/admin/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/admin/price-prediction": {
      "filePath": "_authenticated/admin/price-prediction.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/agent/dashboard": {
      "filePath": "_authenticated/agent/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/agent/price-prediction": {
      "filePath": "_authenticated/agent/price-prediction.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/super-admin/blockchain": {
      "filePath": "_authenticated/super-admin/blockchain.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/super-admin/dashboard": {
      "filePath": "_authenticated/super-admin/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/super-admin/price-prediction": {
      "filePath": "_authenticated/super-admin/price-prediction.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/super-admin/properties": {
      "filePath": "_authenticated/super-admin/properties.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/super-admin/roles": {
      "filePath": "_authenticated/super-admin/roles.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/user/dashboard": {
      "filePath": "_authenticated/user/dashboard.tsx",
      "parent": "/_authenticated"
    },
    "/(auth)/auth/sign-in-2": {
      "filePath": "(auth)/auth/sign-in-2.lazy.tsx",
      "parent": "/(auth)"
    },
    "/(auth)/auth/sign-up": {
      "filePath": "(auth)/auth/sign-up.lazy.tsx",
      "parent": "/(auth)"
    },
    "/_authenticated/settings/account": {
      "filePath": "_authenticated/settings/account.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/appearance": {
      "filePath": "_authenticated/settings/appearance.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/display": {
      "filePath": "_authenticated/settings/display.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/settings/notifications": {
      "filePath": "_authenticated/settings/notifications.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/apps/": {
      "filePath": "_authenticated/apps/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/chats/": {
      "filePath": "_authenticated/chats/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/help-center/": {
      "filePath": "_authenticated/help-center/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/settings/": {
      "filePath": "_authenticated/settings/index.lazy.tsx",
      "parent": "/_authenticated/settings"
    },
    "/_authenticated/tasks/": {
      "filePath": "_authenticated/tasks/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/users/": {
      "filePath": "_authenticated/users/index.lazy.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/super-admin/users/pending": {
      "filePath": "_authenticated/super-admin/users/pending.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/agent/clients/": {
      "filePath": "_authenticated/agent/clients/index.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/super-admin/users/": {
      "filePath": "_authenticated/super-admin/users/index.tsx",
      "parent": "/_authenticated"
    }
  }
}
ROUTE_MANIFEST_END */
